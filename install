#!/usr/bin/env bash

set -e -o pipefail

trap 'echo interrupted; exit' INT

RUNTIMES='node08 node010 perl518 perl520 php54 php55 python27 python34 ruby20 ruby21'

display() { echo "-----> $@"; }
warn() { echo "$@" >&2; }
die() { warn "$@"; exit 1; }

rock_install_darwin() {
  display 'Installing'
  display 'Checking requirements...'

  if ! type -f 'xcode-select' &>/dev/null ; then
    die "xcode must be installed"
  fi

  if [[ ! -e /usr/local/bin/brew ]]; then
    display 'Installing brew...'
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  display 'Updating brew'
  brew update

  if [[ "$( brew tap )" != *homebrew/dupes* ]]; then
    display 'Tapping homebrew/dupes'
    brew tap homebrew/dupes
  fi

  if [[ "$( brew tap )" != *rockstack/rock* ]]; then
    display 'Tapping rockstack/rock'
    brew tap rockstack/rock
  fi

  if ! brew list | grep rock-cli &>/dev/null; then
    echo "Trying to install rock..."
    brew install rock-cli
  fi

  echo
  echo 'Install runtimes'
  echo
  for runtime in $RUNTIMES; do
    echo "brew install rock-runtime-${runtime}"
  done
  echo
}

rock_install_linux_el_6() {
  if ! rpm -qi epel-release &>/dev/null; then
    display 'Installing EPEL release package'
    sudo rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
  fi

  rock_install_linux_el
}

rock_install_linux_el_7() {
  if ! rpm -qi epel-release &>/dev/null; then
    display 'Installing EPEL release package'
    sudo rpm -Uvh http://download.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-1.noarch.rpm
  fi

  rock_install_linux_el
}

rock_install_linux_el() {
  if ! rpm -qi rock-release &>/dev/null; then
    display 'Installing rpm release package'
    sudo rpm -Uvh http://dl.rockstack.org/rpm/stable/el/rock-release.rpm
  fi

  display 'Installing rock and rock-devtools'
  sudo yum install -y rock rock-devtools

  echo
  echo 'Install runtimes'
  echo
  for runtime in $RUNTIMES; do
    echo "sudo yum install -y rock-runtime-${runtime}"
  done
  echo
}

rock_install_linux_ubuntu() {
  if [[ "$ROCK_INSTALL_SKIP_WARNING" != 'true' ]]; then
    echo
    echo '##      ##    ###    ########  ##    ## #### ##    ##  ######   '
    echo '##  ##  ##   ## ##   ##     ## ###   ##  ##  ###   ## ##    ##  '
    echo '##  ##  ##  ##   ##  ##     ## ####  ##  ##  ####  ## ##        '
    echo '##  ##  ## ##     ## ########  ## ## ##  ##  ## ## ## ##   #### '
    echo '##  ##  ## ######### ##   ##   ##  ####  ##  ##  #### ##    ##  '
    echo '##  ##  ## ##     ## ##    ##  ##   ###  ##  ##   ### ##    ##  '
    echo ' ###  ###  ##     ## ##     ## ##    ## #### ##    ##  ######   '
    echo
    read -p 'Ubuntu support is no longer maintained, continue anyway (y/n)? ' -n 1 -r CONFIRM
    echo
    if [[ "$CONFIRM" != 'y' ]]; then
      die 'Exiting...'
    fi
    echo
  fi

  if ! dpkg -s rock-release 2>&1 | grep Status &>/dev/null; then
    tmp=$( mktemp -d )

    display 'Getting deb release package'
    curl -s http://dl.rockstack.org/deb/rock-release-precise.deb -o "$tmp/rock-release.deb"

    display 'Installing deb release package'
    sudo dpkg -i "$tmp/rock-release.deb"

    rm -f "$tmp/rock-release.deb"
    rmdir "$tmp"
  fi

  display 'Updating apt'
  sudo apt-get update

  display 'Installing rock and rock-devtools'
  sudo apt-get install -y rock rock-devtools

  echo
  echo 'Install runtimes'
  echo
  for runtime in $RUNTIMES; do
    echo "sudo apt-get install -y rock-runtime-${runtime}"
  done
  echo
}

rock_install_linux() {
  display 'Detecting Linux distro'

  if grep -E '(CentOS|Red Hat Enterprise Linux).* release 6\.[0-9]+.*' /etc/redhat-release &>/dev/null; then
    rock_install_linux_el_6
  elif grep -E '(CentOS|Red Hat Enterprise Linux).* release 7\.[0-9]+.*' /etc/redhat-release &>/dev/null; then
    rock_install_linux_el_7
  elif grep DISTRIB_CODENAME /etc/lsb-release 2>/dev/null | grep precise &>/dev/null; then
    rock_install_linux_ubuntu
  else
    die 'Unsupported or undetected Linux distro'
  fi
}

rock_install() {
  display 'Detecting OS'
  os="$( uname -s )"

  case "$os" in
  Darwin)
    rock_install_darwin
    ;;
  Linux)
    rock_install_linux
    ;;
  *)
    die "Unknown OS: $os"
    ;;
  esac
}

rock_install "$@"
